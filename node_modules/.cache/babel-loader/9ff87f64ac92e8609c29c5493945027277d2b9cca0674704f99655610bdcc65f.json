{"ast":null,"code":"var _jsxFileName = \"/Users/antasjain/ReactJS/usepopcorn/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n// import \"./index.css\";\n// import App from \"./App\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(StarRating, {\n    maxRating: 5,\n    messages: [\"Terrible\", \"Bad\", \"Okay\", \"Good\", \"Amazing\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n    maxRating: 10,\n    size: 32,\n    color: \"red\",\n    className: \"test\",\n    defaultRating: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nfunction Test() {\n  _s();\n  const [mr, setMr] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StarRating, {\n      color: \"green\",\n      maxRating: 10,\n      onSetRating: setMr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" This movie was rated \", mr, \" stars\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"UGIKsjVqTVjqf3DYwJcFXtXjBHk=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","ReactDOM","StarRating","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","maxRating","messages","fileName","_jsxFileName","lineNumber","columnNumber","size","color","className","defaultRating","Test","_s","mr","setMr","useState","onSetRating","_c","$RefreshReg$"],"sources":["/Users/antasjain/ReactJS/usepopcorn/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n// import \"./index.css\";\n// import App from \"./App\";\nimport StarRating from \"./StarRating\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <StarRating\n      maxRating={5}\n      messages={[\"Terrible\", \"Bad\", \"Okay\", \"Good\", \"Amazing\"]}\n    />\n    <StarRating\n      maxRating={10}\n      size={32}\n      color=\"red\"\n      className=\"test\"\n      defaultRating={3}\n    />\n    <Test />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nfunction Test() {\n  const [mr, setMr] = useState(0);\n  return (\n    <div>\n      <StarRating color=\"green\" maxRating={10} onSetRating={setMr} />\n      <p> This movie was rated {mr} stars</p>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA;AACA,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACJ,KAAK,CAACU,UAAU;EAAAC,QAAA,gBAEfP,OAAA,CAACF,UAAU;IACTU,SAAS,EAAE,CAAE;IACbC,QAAQ,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC,eACFb,OAAA,CAACF,UAAU;IACTU,SAAS,EAAE,EAAG;IACdM,IAAI,EAAE,EAAG;IACTC,KAAK,EAAC,KAAK;IACXC,SAAS,EAAC,MAAM;IAChBC,aAAa,EAAE;EAAE;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC,eACFb,OAAA,CAACkB,IAAI;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACpB,CAAC;;AAED;AACA;AACA;AACA,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAC/B,oBACEtB,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACF,UAAU;MAACiB,KAAK,EAAC,OAAO;MAACP,SAAS,EAAE,EAAG;MAACe,WAAW,EAAEF;IAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Db,OAAA;MAAAO,QAAA,GAAG,wBAAsB,EAACa,EAAE,EAAC,QAAM;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACM,EAAA,CARQD,IAAI;AAAAM,EAAA,GAAJN,IAAI;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}